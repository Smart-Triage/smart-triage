export default function parsePatientDataFromQRCode(data) {
  return new Promise((resolve, reject) => {
    let patient
    try {
      patient = JSON.parse(data)

      // Validate JSON schema
      const incommingKeys = Object.keys(patient)
      const requiredKeys = [
        'id',
        'firstName',
        'lastName',
        'birthNumber',
        'phoneNumber',
        'answers',
        'termsAccepted'
      ]
      if (this.scanningConfirmationCode || this.verifying)
        requiredKeys.push('signature')
      const optionalKeys = [
        'confirmation',
        'confirmed',
        'isCovidSuspected',
        'finished'
      ]

      requiredKeys.forEach(key => {
        if (incommingKeys.indexOf(key) === -1)
          throw Error(`Error: Missing key "${key}" in JSON`)
      })

      const incommingAnswers = Object.keys(patient.answers)
      const requiredAnswers = this.getFormSteps
        .map(step => step.order)
        .filter(stepNum => stepNum !== '0' && stepNum.length <= 1)

      requiredAnswers.forEach(answer => {
        if (incommingAnswers.indexOf(answer) === -1)
          throw Error(`Error: Missing answer "${answer}"  in JSON`)
      })

      // Remove keys, we don't need
      Object.keys(patient).forEach(key => {
        if (
          requiredKeys.indexOf(key) === -1 &&
          optionalKeys.indexOf(key) === -1
        )
          delete patient[key]
      })

      if (this.scanningConfirmationCode) {
        if (
          this.currentPatient.id !== patient.id ||
          this.currentPatient.firstName !== patient.firstName ||
          this.currentPatient.lastName !== patient.lastName ||
          this.currentPatient.birthNumber !== patient.birthNumber ||
          this.currentPatient.phoneNumber !== patient.phoneNumber
        ) {
          this.error =
            'You scanned an invalid code. Please make sure your are scanning for the correct patient and try again. If you have problems contact the hospital staff.'
        } else {
          // Emit valid patient object
          resolve(patient)
        }
      } else {
        // Emit valid patient object
        resolve(patient)
      }
    } catch (e) {
      const error = `Error reading QR code! Make sure you are only reading QR codes generated by this app, your (and patient's) app is up to date. Then try again.`
      reject(error)
    }
  })
}
